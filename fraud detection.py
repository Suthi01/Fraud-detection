# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SfAWUJW0bf8BOViCzHKoVYK_mgQWmcyy
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import pickle

import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split

from collections import Counter
from imblearn.over_sampling import SMOTE

from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from xgboost import XGBClassifier, plot_importance
from sklearn.metrics import roc_auc_score, roc_curve, confusion_matrix, recall_score, classification_report

"""**Importing the dataset**"""

data = pd.read_csv("")
data.head()

data.describe()

"""**check the Missing values**"""

data.isnull().sum()

# Since it is not a Time series problem
data.drop("Time",axis=1,inplace=True)

data.info()

data.describe()

data.shape

"""**Correlation**"""

dataplot = sns.heatmap(data.corr(), cmap="YlGnBu")
# displaying heatmap
plt.show()

"""**Checking for class distribution**"""

sns.countplot(x="Class",data=data)

(data["Class"].value_counts()/5848)*100

"""**Highly imbalanced dataset with 99% of data as not fraud and only 0.17% of data was fraud**"""

X= data.drop("Class",axis=1)
y=data["Class"]

"""**Oversampling**"""

scale = MinMaxScaler()
X = scale.fit_transform(X)

"""**Model Training**"""

pickle.dump(lr, open('lr_model (auc = 0.99).pkl', 'wb'))